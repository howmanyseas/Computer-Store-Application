/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package computerstore;
import java.sql.PreparedStatement;
import java.sql.Connection;
 // Assuming you need DBCon class (adjust if needed)
import computerstore.dbcon;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author sadir
 */
public class payments extends javax.swing.JFrame {

    /**
     * Creates new form payments
     */
    private final Connection con;
   
      private final dbcon dbConnector;
    public payments() {
        initComponents();
          dbConnector = new dbcon(); // Instantiate dbcon in the constructor
        con = dbConnector.connect(); // Initialize con using dbConnector

        if (con != null) {
            System.out.println("Database connection successful.");
            showpay(); // Call the method to display services
        } else {
            System.out.println("Failed to connect to the database.");
        }
        
    }
public void showpay() {
       try {
            System.out.println("Fetching services...");
            PreparedStatement SQ = con.prepareStatement("SELECT PAYMENT_ID, ORDER_ID, CARD_NR, EX_DATE, CVC, CARD_FNAME, CARD_LNAME FROM PAYMENT;");
            ResultSet rs = SQ.executeQuery();

            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
            tableModel.setRowCount(0);
//PAYMENT_ID, ORDER_ID, CARD_NR, EX_DATE, CVC, CARD_FNAME, CARD_LNAME 
            while (rs.next()) {
                String PAYMENT_ID = rs.getString("PAYMENT_ID");
                String ORDER_ID = String.valueOf(rs.getInt("ORDER_ID"));
                String CARD_NR = rs.getString("CARD_NR");
                String EX_DATE = rs.getString("EX_DATE");
                String CVC = rs.getString("CVC");
                String CARD_FNAME = rs.getString("CARD_FNAME");
                String CARD_LNAME = rs.getString("CARD_LNAME");
                String rowData[] = {PAYMENT_ID, ORDER_ID, CARD_NR, EX_DATE, CVC, CARD_FNAME, CARD_LNAME };
                tableModel.addRow(rowData);
            }
        } catch (SQLException ex) {
            System.out.println("Error fetching services: " + ex.getMessage());
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error fetching services.");
        }}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        srch_t = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(129, 135, 177));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PAYMENT_ID", "ORDER_ID", "CARD_NR", "EX_DATE", "CVC", "CARD_FNAME", "CARD_LNAME"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(59, 75, 125));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SHOW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PAYMENT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(srch_t, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srch_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
              
 if (srch_t.getText().isEmpty()) {
        
     showpay(); // If the search field is empty, show all categoriesshowAllCateg(); 
    } else {
        try {
            // Clear the existing table data
            DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
            table.setRowCount(0);
//ORDER_ID, CUSTOMER_ID, ORDER_DATE, TOT_AMOUNT, SUBTOTAL, DISCOUNT_ID

            PreparedStatement search = con.prepareStatement("SELECT * FROM CUS_ORDER WHERE PAYMENT_ID = ? OR ORDER_ID = ? OR CARD_NR = ? OR EX_DATE = ? OR CVC = ? OR CARD_FNAME = ? OR CARD_LNAME = ?;");
            search.setString(1, srch_t.getText());
            search.setString(2, srch_t.getText());
            search.setString(3, srch_t.getText());
            search.setString(4, srch_t.getText());
            search.setString(5, srch_t.getText());
            search.setString(6, srch_t.getText());

            ResultSet res = search.executeQuery();

            while (res.next()) {
                
                String PAYMENT_ID = res.getString("PAYMENT_ID");
                String ORDER_ID = String.valueOf(res.getInt("ORDER_ID"));
                String CARD_NR = res.getString("CARD_NR");
                String EX_DATE = res.getString("EX_DATE");
                String CVC = res.getString("CVC");
                String CARD_FNAME = res.getString("CARD_FNAME");
                String CARD_LNAME = res.getString("CARD_LNAME");
                String tableData[] = {PAYMENT_ID, ORDER_ID, CARD_NR, EX_DATE, CVC, CARD_FNAME, CARD_LNAME };
        
                table.addRow(tableData);
            }
        } catch (SQLException ex) {
            System.out.println("Could not search for the keyword due to DB problems!");
            JOptionPane.showMessageDialog(this, "Could not search for the keyword due to DB problems!");
        }
    }
        



        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(payments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new payments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField srch_t;
    // End of variables declaration//GEN-END:variables
}
